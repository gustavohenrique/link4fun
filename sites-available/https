server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;
    root /var/www/html;
    index index.html;

    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    ssl_certificate           /home/ubuntu/letsencrypt/config/live/link4.fun/fullchain.pem;
    ssl_certificate_key       /home/ubuntu/letsencrypt/config/live/link4.fun/privkey.pem;
    ssl_session_timeout       1d;
    ssl_session_cache         shared:MozSSL:10m;
    ssl_session_tickets       off;
    ssl_protocols             TLSv1.2 TLSv1.3;
    ssl_stapling              on;
    ssl_stapling_verify       on;
    ssl_prefer_server_ciphers off;
    ssl_ciphers               ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    resolver 8.8.8.8;
    default_type "text/html";
    gzip on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    access_log off;
    error_log /var/log/nginx/error.log;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains;" always;

    limit_conn link4fun  10;
    limit_rate_after     500k;
    limit_rate           50k;

    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|woff|woff2)$ {
        expires 10d;
        access_log off;
        add_header Cache-Control "public";
    }

    location ~* \.(?:css|js)$ {
        expires 1d;
        access_log off;
        add_header Cache-Control "public";
    }

    if ($http_cookie !~* "Link4Fun" ) {
        set $no_auth true;
    }

    set $template_root /var/www/html/templates;
    set $unescaped_url https://link4.fun/;
    set_escape_uri $escaped_url $unescaped_url;
    include /etc/nginx/sites-available/routes/routes.locations;
}

server {
    listen 80;
    listen [::]:80;
    server_name _;
    return 301 https://$host$request_uri;
}
