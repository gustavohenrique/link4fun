server {
    listen 80 default_server;
    root /var/www/html;
    index index.html index.nginx-debian.html;
    resolver 8.8.8.8;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    location ~* ^/u\/(?<code>[a-z0-9]+)/?$ {
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store';
        if_modified_since off;
        expires off;
        etag off;
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        default_type "text/html";
        content_by_lua_block {
            local filepath = "/var/www/html/links/" .. ngx.var.code
            local file, err = io.open(filepath, "r")
            if file == nill then
                ngx.say("error: couldnt open file: ", err)
                ngx.exit(500)
            end 
            content = file:read()
            if content == nill or content == "" then
                ngx.say("error: file is empty")
                ngx.exit(500)
            end
            file:close()
            local function split(s, delimiter)
                result = {};
                for match in (s..delimiter):gmatch("(.-)"..delimiter) do
                    table.insert(result, match);
                end
                return result;
            end
            local table = split(content, "|")
            local siteUrl = table[1]
            local clicks = table[2]
            local template = require "resty.template"
            local view = template.new "link_details.html"
            view.code = ngx.var.code
            view.url = siteUrl
            view.clicks = clicks
            view:render()
        }
    }

    location ~* /(?<code>[a-z0-9]+)/?$ {
        default_type "text/html";
        content_by_lua_block {
            local filepath = "/var/www/html/links/" .. ngx.var.code
            local file, err = io.open(filepath, "r")
            if file == nill then
                ngx.say("error: couldn't open file: ", err)
                ngx.exit(500)
            end 
            content = file:read()
            if content == nill or content == "" then
                ngx.say("error: file is empty")
                ngx.exit(500)
            end
            file:close()
            local function split(s, delimiter)
                result = {};
                for match in (s..delimiter):gmatch("(.-)"..delimiter) do
                    table.insert(result, match);
                end
                return result;
            end
            local table = split(content, "|")
            local siteUrl = table[1]
            local clicks = table[2] + 1
            local newContent = siteUrl .. "|" .. clicks
            file = io.open(filepath, "w")
            file:write(newContent)
            file:close()

            local function startswith(s, value)
                return string.sub(s, 1, string.len(value)) == value
            end
            if startswith(siteUrl, "http://") or startswith(siteUrl, "https://") then
                return ngx.redirect(siteUrl, 302)
            end
            return ngx.redirect("http://" .. siteUrl)
        }
    }

    location = /shortener {
        default_type "text/html";
        client_max_body_size 50k;
        client_body_buffer_size 50k;

        content_by_lua_block {
            ngx.req.read_body()
            local method = ngx.req.get_method()
            if method ~= "POST" then
                ngx.say("error: unsupported method")
                ngx.exit(422)
            end
            local args, err = ngx.req.get_post_args(2)
            if err == "truncated" then
                ngx.say("error: too many POST parameters.")
                ngx.exit(403)
            end
            if not args then
                ngx.say("error: failed to get post args: ", err)
                ngx.exit(500)
            end
            
            local siteUrl = args.url
            if siteUrl == nill or siteUrl == "" then
                ngx.say("error: required parameter 'siteUrl' is empty")
                ngx.exit(400)
            end

            local code = args.code
            if code == nill or code == "" then
                math.randomseed(os.clock()+os.time())
                local random = math.random
                local function randid()
                    local template ='xxxyx'
                    return string.gsub(template, '[xy]', function (c)
                        local v = (c == 'x') and random(0, 0xf) or random(8, 0xb)
                        return string.format('%x', v)
                    end)
                end
                code = randid()
            end

            local filepath = "/var/www/html/links/" .. code
            local file, err = io.open(filepath, "w")
            if file == nill then
                ngx.say("error: couldnt open file: ", err)
                ngx.exit(500)
            end 
            local content = siteUrl .. "|0"
            file:write(content)
            file:close()

            ngx.redirect("/u/" .. code)
        }
    }
}
