user  ubuntu;
worker_processes  1;
worker_rlimit_nofile 97816;  # cores * 97816

events {
    worker_connections 1024;
}

http {
    include mime.types;
    include gzip.conf;
    charset utf-8;
    sendfile on;
    keepalive_timeout 65;
    resolver 8.8.8.8;
    default_type "text/html";
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    lua_check_client_abort  on;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    lua_package_path  '/var/www/lua/lib/?.lua;/var/www/lua/?.lua;;';
    lua_shared_dict cache_dict 1024m;
    init_by_lua_block {
        require "resty.core"
        local mlcache = require "resty.mlcache"
        local cache, err = mlcache.new("my_cache", "cache_dict", {
            lru_size = 1000,  -- hold up to 1000 items in the L1 cache (Lua VM)
            ttl      = 20,    -- cache scalar types and tables for 20s
            neg_ttl  = 1,     -- cache nil values for 1s,
        })
        if err then
            ngx.log(ngx.ERR, "Failed to create cache: ", err)
        end
        _G.cache = cache
    }

    include site.conf;
}
